{"ast":null,"code":"var _jsxFileName = \"/Users/shubham/Documents/GitHub/reactnd-project-would-you-rather/src/components/NewPoll.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Segment, Header, Grid, Divider, Form, Dimmer, Loader } from 'semantic-ui-react';\nimport { handleSaveQuestion } from '../actions/questions';\nexport class NewPoll extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validSubmit: false,\n      isLoading: false,\n      option1: '',\n      option2: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        authUser,\n        handleSaveQuestion\n      } = this.props;\n      const {\n        option1,\n        option2\n      } = this.state;\n      new Promise((res, rej) => {\n        this.setState({\n          isLoading: true\n        });\n        handleSaveQuestion(option1, option2, authUser);\n        setTimeout(() => res('success'), 1000);\n      }).then(() => {\n        this.setState({\n          option1: '',\n          option2: ''\n        });\n        this.setState({\n          validSubmit: true\n        });\n      });\n    };\n  }\n\n  render() {\n    const disabled = this.state.option1 === '' || this.state.option2 === '';\n\n    if (this.state.validSubmit === true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Segment.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      textAlign: \"left\",\n      block: true,\n      attached: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Create a New Poll\"), /*#__PURE__*/React.createElement(Grid, {\n      padded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, this.state.isLoading && /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      content: \"Updating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Complete the question:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, \"Would you rather...\")), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      id: \"option1\",\n      placeholder: \"Enter option one...\",\n      value: this.state.option1,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, \"Or\"), /*#__PURE__*/React.createElement(Form.Input, {\n      id: \"option2\",\n      placeholder: \"Enter option two...\",\n      value: this.state.option2,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      positive: true,\n      size: \"tiny\",\n      fluid: true,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, \"Submit\")))));\n  }\n\n}\nNewPoll.propTypes = {\n  authUser: PropTypes.string.isRequired,\n  handleSaveQuestion: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps({\n  authUser\n}) {\n  return {\n    authUser\n  };\n}\n\nexport default connect(mapStateToProps, {\n  handleSaveQuestion\n})(NewPoll);","map":{"version":3,"sources":["/Users/shubham/Documents/GitHub/reactnd-project-would-you-rather/src/components/NewPoll.js"],"names":["React","Component","PropTypes","Redirect","connect","Segment","Header","Grid","Divider","Form","Dimmer","Loader","handleSaveQuestion","NewPoll","state","validSubmit","isLoading","option1","option2","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","authUser","props","Promise","res","rej","setTimeout","then","render","disabled","propTypes","string","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {Segment, Header, Grid, Divider, Form, Dimmer, Loader} from 'semantic-ui-react';\nimport { handleSaveQuestion } from '../actions/questions';\n\nexport class NewPoll extends Component {\n    static propTypes = {\n        authUser: PropTypes.string.isRequired,\n        handleSaveQuestion: PropTypes.func.isRequired\n    };\n    state = {\n        validSubmit: false,\n        isLoading: false,\n        option1: '',\n        option2: ''\n    };\n    handleChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n        const { authUser, handleSaveQuestion } = this.props;\n        const { option1, option2 } = this.state;\n\n        new Promise((res, rej) => {\n            this.setState({ isLoading: true });\n            handleSaveQuestion(option1, option2, authUser);\n            setTimeout(() => res('success'), 1000);\n        }).then(() => {\n            this.setState({\n                option1: '',\n                option2: ''\n            });\n            this.setState({ validSubmit: true });\n        });\n    };\n    render() {\n        const disabled = this.state.option1 === '' || this.state.option2 === '';\n\n        if (this.state.validSubmit === true) {\n            return <Redirect to=\"/\" />;\n        }\n        return (\n            <Segment.Group>\n                <Header as=\"h3\" textAlign=\"left\" block attached=\"top\">\n                    Create a New Poll\n                </Header>\n                <Grid padded>\n                    <Grid.Column>\n                        {this.state.isLoading && (\n                            <Dimmer active inverted>\n                                <Loader content=\"Updating\" />\n                            </Dimmer>\n                        )}\n                        <p>Complete the question:</p>\n                        <p>\n                            <strong>Would you rather...</strong>\n                        </p>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Input\n                                id=\"option1\"\n                                placeholder=\"Enter option one...\"\n                                value={this.state.option1}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <Divider horizontal>Or</Divider>\n                            <Form.Input\n                                id=\"option2\"\n                                placeholder=\"Enter option two...\"\n                                value={this.state.option2}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <Form.Button positive size=\"tiny\" fluid disabled={disabled}>\n                                Submit\n                            </Form.Button>\n                        </Form>\n                    </Grid.Column>\n                </Grid>\n            </Segment.Group>\n        );\n    }\n}\n\nfunction mapStateToProps({ authUser }) {\n    return {\n        authUser\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    { handleSaveQuestion }\n)(NewPoll);"]},"metadata":{},"sourceType":"module"}