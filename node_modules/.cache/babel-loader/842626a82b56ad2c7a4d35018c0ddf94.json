{"ast":null,"code":"import { saveQuestion } from '../utils/projectAPI';\nimport { addQuestionToUser } from '../actions/users';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_ANSWER_TO_QUESTION = 'ADD_ANSWER_TO_QUESTION';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\nexport function addAnswerToQuestion(authUser, qid, answer) {\n  return {\n    type: ADD_ANSWER_TO_QUESTION,\n    authUser,\n    qid,\n    answer\n  };\n}\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\n\nexport function handleSaveQuestion(optionOneText, optionTwoText, author) {\n  return dispatch => {\n    return saveQuestion({\n      optionOneText,\n      optionTwoText,\n      author\n    }).then(question => {\n      dispatch(addQuestion(question));\n      dispatch(addQuestionToUser(question));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/shubham/Documents/GitHub/reactnd-project-would-you-rather/src/actions/questions.js"],"names":["saveQuestion","addQuestionToUser","RECEIVE_QUESTIONS","ADD_ANSWER_TO_QUESTION","ADD_QUESTION","receiveQuestions","questions","type","addAnswerToQuestion","authUser","qid","answer","addQuestion","question","handleSaveQuestion","optionOneText","optionTwoText","author","dispatch","then"],"mappings":"AAAA,SAASA,YAAT,QAA6B,qBAA7B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEL,iBADH;AAEHI,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,mBAAT,CAA6BC,QAA7B,EAAuCC,GAAvC,EAA4CC,MAA5C,EAAoD;AACvD,SAAO;AACHJ,IAAAA,IAAI,EAAEJ,sBADH;AAEHM,IAAAA,QAFG;AAGHC,IAAAA,GAHG;AAIHC,IAAAA;AAJG,GAAP;AAMH;;AAED,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC3B,SAAO;AACHN,IAAAA,IAAI,EAAEH,YADH;AAEHS,IAAAA;AAFG,GAAP;AAIH;;AAED,OAAO,SAASC,kBAAT,CAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,MAA1D,EAAkE;AACrE,SAAOC,QAAQ,IAAI;AACf,WAAOlB,YAAY,CAAC;AAAEe,MAAAA,aAAF;AAAiBC,MAAAA,aAAjB;AAAgCC,MAAAA;AAAhC,KAAD,CAAZ,CAAuDE,IAAvD,CACHN,QAAQ,IAAI;AACRK,MAAAA,QAAQ,CAACN,WAAW,CAACC,QAAD,CAAZ,CAAR;AACAK,MAAAA,QAAQ,CAACjB,iBAAiB,CAACY,QAAD,CAAlB,CAAR;AACH,KAJE,CAAP;AAMH,GAPD;AAQH","sourcesContent":["import { saveQuestion } from '../utils/projectAPI';\nimport { addQuestionToUser } from '../actions/users';\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_ANSWER_TO_QUESTION = 'ADD_ANSWER_TO_QUESTION';\nexport const ADD_QUESTION = 'ADD_QUESTION';\n\nexport function receiveQuestions(questions) {\n    return {\n        type: RECEIVE_QUESTIONS,\n        questions\n    };\n}\n\nexport function addAnswerToQuestion(authUser, qid, answer) {\n    return {\n        type: ADD_ANSWER_TO_QUESTION,\n        authUser,\n        qid,\n        answer\n    };\n}\n\nfunction addQuestion(question) {\n    return {\n        type: ADD_QUESTION,\n        question\n    };\n}\n\nexport function handleSaveQuestion(optionOneText, optionTwoText, author) {\n    return dispatch => {\n        return saveQuestion({ optionOneText, optionTwoText, author }).then(\n            question => {\n                dispatch(addQuestion(question));\n                dispatch(addQuestionToUser(question));\n            }\n        );\n    };\n}"]},"metadata":{},"sourceType":"module"}