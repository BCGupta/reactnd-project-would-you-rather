{"ast":null,"code":"var _jsxFileName = \"/Users/shubham/Documents/GitHub/reactnd-project-would-you-rather/src/components/PollQuestion.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Header, Button, Form, Radio } from 'semantic-ui-react';\nimport { handleSaveQuestionAnswer } from '../actions/users';\nexport class PollQuestion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n\n    this.handleChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.value !== '') {\n        const {\n          authUser,\n          question,\n          handleSaveQuestionAnswer\n        } = this.props;\n        handleSaveQuestionAnswer(authUser, question.id, this.state.value);\n      }\n    };\n  }\n\n  render() {\n    const {\n      question\n    } = this.props;\n    const disabled = this.state.value === '' ? true : false;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Would you rather\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      label: question.optionOne.text,\n      name: \"radioGroup\",\n      value: \"optionOne\",\n      checked: this.state.value === 'optionOne',\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Radio, {\n      label: question.optionTwo.text,\n      name: \"radioGroup\",\n      value: \"optionTwo\",\n      checked: this.state.value === 'optionTwo',\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      size: \"tiny\",\n      fluid: true,\n      positive: true,\n      disabled: disabled,\n      content: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\nPollQuestion.propTypes = {\n  authUser: PropTypes.string.isRequired,\n  handleSaveQuestionAnswer: PropTypes.func.isRequired,\n  question: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps({\n  authUser\n}, {\n  match\n}) {\n  return {\n    authUser\n  };\n}\n\nexport default connect(mapStateToProps, {\n  handleSaveQuestionAnswer\n})(PollQuestion);","map":{"version":3,"sources":["/Users/shubham/Documents/GitHub/reactnd-project-would-you-rather/src/components/PollQuestion.js"],"names":["React","Component","Fragment","PropTypes","connect","Header","Button","Form","Radio","handleSaveQuestionAnswer","PollQuestion","state","value","handleChange","e","setState","handleSubmit","preventDefault","authUser","question","props","id","render","disabled","optionOne","text","optionTwo","propTypes","string","isRequired","func","object","mapStateToProps","match"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Header, Button, Form, Radio } from 'semantic-ui-react';\nimport { handleSaveQuestionAnswer } from '../actions/users';\n\nexport class PollQuestion extends Component {\n    static propTypes = {\n        authUser: PropTypes.string.isRequired,\n        handleSaveQuestionAnswer: PropTypes.func.isRequired,\n        question: PropTypes.object.isRequired\n    };\n    state = {\n        value: ''\n    };\n\n    handleChange = (e, { value }) => this.setState({ value });\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.value !== '') {\n            const { authUser, question, handleSaveQuestionAnswer } = this.props;\n            handleSaveQuestionAnswer(authUser, question.id, this.state.value);\n        }\n    };\n\n    render() {\n        const { question } = this.props;\n        const disabled = this.state.value === '' ? true : false;\n\n        return (\n            <Fragment>\n                <Header as=\"h4\">Would you rather</Header>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Field>\n                        <Radio\n                            label={question.optionOne.text}\n                            name=\"radioGroup\"\n                            value=\"optionOne\"\n                            checked={this.state.value === 'optionOne'}\n                            onChange={this.handleChange}\n                        />\n                        <br />\n                        <Radio\n                            label={question.optionTwo.text}\n                            name=\"radioGroup\"\n                            value=\"optionTwo\"\n                            checked={this.state.value === 'optionTwo'}\n                            onChange={this.handleChange}\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <Button\n                            color=\"green\"\n                            size=\"tiny\"\n                            fluid\n                            positive\n                            disabled={disabled}\n                            content=\"Submit\"\n                        />\n                    </Form.Field>\n                </Form>\n            </Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps({ authUser }, { match }) {\n\n    return {\n        authUser\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    { handleSaveQuestionAnswer }\n)(PollQuestion);"]},"metadata":{},"sourceType":"module"}