{"ast":null,"code":"import { saveQuestionAnswer } from '../utils/projectAPI';\nimport { addAnswerToQuestion } from '../actions/questions';\nexport function receiveUsers(users) {\n  return {\n    type: RECEIVE_USERS,\n    users\n  };\n}\nexport const RECEIVE_USERS = 'RECEIVE_USERS';\n\nfunction addAnswerToUser(authUser, qid, answer) {\n  return {\n    type: ADD_ANSWER_TO_USER,\n    authUser,\n    qid,\n    answer\n  };\n}\n\nexport const ADD_ANSWER_TO_USER = 'ADD_ANSWER_TO_USER';\nexport function handleSaveQuestionAnswer(authUser, qid, answer) {\n  return dispatch => {\n    dispatch(addAnswerToUser(authUser, qid, answer));\n    dispatch(addAnswerToQuestion(authUser, qid, answer));\n    return saveQuestionAnswer(authUser, qid, answer).catch(e => {\n      console.warn('Error in handleSaveQuestionAnswer:', e);\n    });\n  };\n}\nexport function addQuestionToUser({\n  id,\n  author\n}) {\n  return {\n    type: ADD_QUESTION_TO_USER,\n    id,\n    author\n  };\n}\nexport const ADD_QUESTION_TO_USER = 'ADD_QUESTION_TO_USER';","map":{"version":3,"sources":["/Users/shubham/Documents/GitHub/reactnd-project-would-you-rather/src/actions/users.js"],"names":["saveQuestionAnswer","addAnswerToQuestion","receiveUsers","users","type","RECEIVE_USERS","addAnswerToUser","authUser","qid","answer","ADD_ANSWER_TO_USER","handleSaveQuestionAnswer","dispatch","catch","e","console","warn","addQuestionToUser","id","author","ADD_QUESTION_TO_USER"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,qBAAnC;AACA,SAASC,mBAAT,QAAoC,sBAApC;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAChC,SAAO;AACHC,IAAAA,IAAI,EAAEC,aADH;AAEHF,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,MAAME,aAAa,GAAG,eAAtB;;AAEP,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,GAAnC,EAAwCC,MAAxC,EAAgD;AAC5C,SAAO;AACHL,IAAAA,IAAI,EAAEM,kBADH;AAEHH,IAAAA,QAFG;AAGHC,IAAAA,GAHG;AAIHC,IAAAA;AAJG,GAAP;AAMH;;AAED,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,SAASC,wBAAT,CAAkCJ,QAAlC,EAA4CC,GAA5C,EAAiDC,MAAjD,EAAyD;AAC5D,SAAOG,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACN,eAAe,CAACC,QAAD,EAAWC,GAAX,EAAgBC,MAAhB,CAAhB,CAAR;AACAG,IAAAA,QAAQ,CAACX,mBAAmB,CAACM,QAAD,EAAWC,GAAX,EAAgBC,MAAhB,CAApB,CAAR;AAEA,WAAOT,kBAAkB,CAACO,QAAD,EAAWC,GAAX,EAAgBC,MAAhB,CAAlB,CAA0CI,KAA1C,CAAgDC,CAAC,IAAI;AACxDC,MAAAA,OAAO,CAACC,IAAR,CAAa,oCAAb,EAAmDF,CAAnD;AACH,KAFM,CAAP;AAGH,GAPD;AAQH;AAED,OAAO,SAASG,iBAAT,CAA2B;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAA3B,EAA2C;AAC9C,SAAO;AACHf,IAAAA,IAAI,EAAEgB,oBADH;AAEHF,IAAAA,EAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH;AAED,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B","sourcesContent":["import { saveQuestionAnswer } from '../utils/projectAPI';\nimport { addAnswerToQuestion } from '../actions/questions';\n\nexport function receiveUsers(users) {\n    return {\n        type: RECEIVE_USERS,\n        users\n    };\n}\n\nexport const RECEIVE_USERS = 'RECEIVE_USERS';\n\nfunction addAnswerToUser(authUser, qid, answer) {\n    return {\n        type: ADD_ANSWER_TO_USER,\n        authUser,\n        qid,\n        answer\n    };\n}\n\nexport const ADD_ANSWER_TO_USER = 'ADD_ANSWER_TO_USER';\n\nexport function handleSaveQuestionAnswer(authUser, qid, answer) {\n    return dispatch => {\n        dispatch(addAnswerToUser(authUser, qid, answer));\n        dispatch(addAnswerToQuestion(authUser, qid, answer));\n\n        return saveQuestionAnswer(authUser, qid, answer).catch(e => {\n            console.warn('Error in handleSaveQuestionAnswer:', e);\n        });\n    };\n}\n\nexport function addQuestionToUser({ id, author }) {\n    return {\n        type: ADD_QUESTION_TO_USER,\n        id,\n        author\n    };\n}\n\nexport const ADD_QUESTION_TO_USER = 'ADD_QUESTION_TO_USER';"]},"metadata":{},"sourceType":"module"}